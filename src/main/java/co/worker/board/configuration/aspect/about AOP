	
	
### AOP 이해 ### 				출처: https://sjh836.tistory.com/157
	
# ! 관점 지향 프로그래밍이란?
	
	- 나의 이해 : 
		객체지향프로그래밍을 해서 각 서비스(메소드)별 구현이 되어 있을 때 공통적으로 처리 되어야할 내용이 있다면 각 서비스(메소드)마다 같은 내용을 추가한다면 중복이 발생함.
		따라서 중복을 줄이기 위해 각 서비스가 실행되기 전에 먼저  전처리 후 서비스 실행 or (예외나 다른 처리)가 되면 되는데 그 전처리를 공통적으로 작성...
		ex) 로그인 처리(로그인 상태인지 확인하여 로그인 창을 띄운다거나 or 요청작업진행)
	
	- Filter vs Intercepter vs AOP 공부하기
	
	
# AOP 관련 용어
	
	- 조인포인트(Joinpoint) : 클라이언트가 호출하는 모든 비즈니스 메소드, 조인포인트 중에서 포인트컷되기 때문에 포인트컷의 후보로 생각할 수 있다.
	
	- 포인트컷(Pointcut) : 특정 조건에 의해 필터링된 조인포인트, 수많은 조인포인트 중에 특정 메소드에서만 횡단 공통기능을 수행시키기 위해서 사용한다.
	
	- 표현식 : 리턴타입 패키지경로 클래스명 메소드명(매개변수)
	
	- 어드바이스(Advice) : 횡단 관심에 해당하는 공통 기능의 코드, 독립된 클래스의 메소드로 작성한다.
		
		* 어드바이스의 동작 시점
			Before	: 메소드 실행 전에 동작
			After	: 메소드 실행 후에 동작
			After-returning	: 메소드가 정상적으로 실행된 후에 동작
			After-throwing	: 예외가 발생한 후에 동작
			Around	: 메소드 호출 이전, 이후, 예외발생 등 모든 시점에서 동작
			
	- 위빙(Weaving) : 포인트컷으로 지정한 핵심 관심 메소드가 호출될 때, 어드바이스에 해당하는 횡단 관심 메소드가 삽입되는 과정을 의미한다. 
				이를 통해 비즈니스 메소드를 수정하지 않고도 횡단 관심에 해당하는 기능을 추가하거나 변경이 가능해진다.

	- 애스팩트(Aspect) : 포인트컷과 어드바이스의 결합이다. 어떤 포인트컷 메소드에 대해 어떤 어드바이스 메소드를 실행할지 결정한다.


